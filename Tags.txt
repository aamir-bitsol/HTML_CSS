<DOCTYPE HTML>
<html>
<body>

-- XHTML(EXtensible HyperText Markup Language)
XHTML is a stricter, more XML-based version of HTML.
<!DOCTYPE> is mandatory
The xmlns attribute in <html> is mandatory
<html>, <head>, <title>, and <body> are mandatory
Elements must always be properly nested
Elements must always be closed
Elements must always be in lowercase
Attribute names must always be in lowercase
Attribute values must always be quoted
Attribute minimization is forbidden


-- Head
<head> element is a container for the following elements: <title>, <style>, <meta>, <link>, <script>, and <base>.
<head> element is a container for metadata and is placed between the <html> tag and the <body> tag.
HTML metadata is data about the HTML document. Metadata is not displayed.
Metadata typically define the document title, character set, styles, scripts, and other meta information.
The <link> element defines the relationship between the current document and an external resource.

The <meta> element is typically used to specify the character set, page description, keywords, author of the document, and viewport settings.
The metadata will not be displayed on the page.
The viewport is the user's visible area of a web page. It varies with the device it will be smaller on a 
mobile phone than on a computer screen.

<meta name="viewport" content="width=device-width, initial-scale=1.0">
This gives the browser instructions on how to control the page's dimensions and scaling.
The width=device-width part sets the width of the page to follow the screen-width of the device (which will vary depending on the device).
The initial-scale=1.0 part sets the initial zoom level when the page is first loaded by the browser.

The <base> element specifies the base URL and/or target for all relative URLs in a page.
The <base> tag must have either an href or a target attribute present, or both. There can only be one single <base> element in a document!

-- Layout
HTML has several semantic elements that define the different parts of a web page
<header>    ->  Defines a header for a document or a section. <header> element represents a container for introductory content or a set of navigational links
<nav>       ->  Defines a set of navigation links
<section>   ->  Defines a section in a document. A section is a thematic grouping of content, typically with a heading
<article>   ->  Defines an independent, self-contained content. An article should make sense on its own, and it should be possible to distribute it independently from the rest of the web site.
<aside>     ->  Defines content aside from the content (like a sidebar)
<footer>    ->  Defines a footer for a document or a section. Typically contains copyright, sitemap, contact info
<details>   ->  Defines additional details that the user can open and close on demand
<summary>   ->  Defines a heading for the <details> element
<figure>    ->  Specifies self-contained content, like illustrations, diagrams, photos, code listings, etc.
<figcaption> ->	Defines a caption for a <figure> element


-- Semantics Elements
Semantic elements means the elements with a meaning. A semantic element clearly describes its meaning to both the browser and the developer.

-- Styling Guide
Always declare the document type as the first line in your document.
HTML allows mixing uppercase and lowercase letters in element names.
Close all elements
write lowercase attributes name
Close empty elements. If you expect XML/XHTML software to access your page, keep the closing slash (/), because it is required in XML and XHTML.
You should always include the lang attribute inside the <html lang="en-us">


-- Responsive
Responsive web design is about creating web pages that look good on all devices!
<meta name="viewport" content="width=device-width, initial-scale=1.0">
This will set the viewport of your page, which will give the browser instructions on how to control the page's dimensions and scaling.

Responsive images are images that scale nicely to fit any browser size.
<img src="img_girl.jpg" style="width:100%;">
Notice that in the example above, the image can be scaled up to be larger than its original size. A better solution,
in many cases, will be to use the max-width property instead.
max-width ->  If the max-width property is set to 100%, the image will scale down if it has to, but never scale up to be larger than its original size
The HTML <picture> element allows you to define different images for different browser window sizes.
<picture>
  <source srcset="img_smallflower.jpg" media="(max-width: 600px)">
  <source srcset="img_flowers.jpg" media="(max-width: 1500px)">
</picture>

The text size can be set with a "vw" unit, which means the "viewport width"
Viewport is the browser window size. 1vw = 1% of viewport width. Use the "vw" unit when sizing the text

In addition to resize text and images, it is also common to use media queries in responsive web pages.
With media queries you can define completely different styles for different browser sizes.


<img> image, used to add images 
<img src="here is the source of image" alt="if img is missing, this text will be displayed" height="height in px" width="width in px">

<h#> heading (1-6)
-- Paragraph Tags
1. <p> paragraph, used to write a paragraph
2. <pre> -> preformatted, we should use it when we want to display text with spaces/newlines
3. <hr> horizontal row, used to draw a horizontal line
4. <br> break line, used to add a new line.

-- Style attributes

1. background-color -> defines the background color for an HTML element
<body style="background-color:red;">

2. color -> defines the text color for an HTML element
<h1 style="color:blue;">This is a heading</h1>

3. font-family -> defines the font to be used for an HTML element
<p style="font-family:courier;">This is a paragraph.</p>

4. font-size -> defines the text size for an HTML element
<p style="font-size:160%;">This is a paragraph.</p>

5. text-align -> defines the horizontal text alignment for an HTML element
<h1 style="text-align:center;">Centered Heading</h1>

-- Text Formatting
1. <b> - Bold text
<b>This text is bold</b>

2. <strong> - Important text, The content inside is typically displayed in bold.
<strong>This text is important!</strong>

3. <i> - Italic text, defines a part of text in an alternate voice or mood. The content inside is typically displayed in italic.
<i>This text is italic</i>
<h1><i>Heading</i></h1>

4. <em> - Emphasized text,  defines emphasized text. The content inside is typically displayed in italic. 
screen reader will pronounce the words in <em> with an emphasis, using verbal stress
<p><em>This text is emphasized.</em></p>

5. <mark> - Marked text, defines text that should be marked or highlighted(uses yellow color)

6. <small> - Smaller text, defines smaller text. Represents side-comments and small print, 
like copyright and legal text, independent of its styled presentation
<small>This is some smaller text.</small>

7. <del> - Deleted text, defines text that has been deleted from a document (strike a line)
<p>My favorite color is <del>blue</del> red.</p>

8. <ins> - Inserted text, defines a text that has been inserted into a document(underline text)
<p>My favorite color is <del>blue</del> <ins>red</ins>.</p> 

9. <sub> - Subscript text, defines subscript text(half a character below the normal line), used in formulas

10. <sup> - Superscript text, defines superscript text(half a character above the normal line), used for footnotes


-- Quotation and Citation Elements

1. <abbr> ->	Defines an abbreviation or acronym
<p>The <abbr title="World Health Organization">WHO</abbr> was founded in 1948.</p>

2. <address> -> 	Defines contact information for the author/owner of a document(italic)
<address>This is the address</address>

3. <bdo>  (Bi-Directional Override) ->  Defines the text direction
<bdo dir="rtl">This text will be written from right to left</bdo>

4. <blockquote> -> Defines a section that is quoted from another source (indent)
<blockquote cite="source link">Quoated from A website</blockquote> 

5. <cite> ->	Defines the title of a work(italic)
<p><cite>The Scream</cite> by Edward Munch. Painted in 1893.</p>

6. <q>	-> Defines a short inline quotation
<p>WWF's goal is to: <q>Build a future where people live in harmony with nature.</q></p>

-- Images
1. <img> -> Image, used to add images. The <img> tag has two required attributes src - Specifies the path to the image, alt - Specifies an alternate text for the image
<img src="image source" alt="describes the image">

2. <maps> -> Allows user to click specific area of image. To make this work, add usemap attribute in img tag.
<map name="workmap">
  <area shape="rect" coords="34,44,270,350" alt="Computer" href="computer.htm"> -> area defines clickable area in image
  shape can be "rect|circle|poly|default
  coords are coordinates -> Rectangle-> x1,y1,x2,x2, circle-> x,y,r -> poly->x1,y1,x2,y2...., default-> full image
</map>

3. Picture -> gives web developers more flexibility in specifying image resources
<picture> <source> <img></picture> Picture tag contains 2 more tags source and img. 
Allows us to display different pictures for different devices or screen sizes
The browser will look for the first <source> element where the media query matches the current viewport width,
 and then it will display the proper image (specified in the srcset attribute). The <img> element is required as
the last child of the <picture> element, as a fallback option if none of the source tags matches.
<picture>
  <source media="(min-width:465px)" srcset="img_white_flower.jpg">
  <img src="img_orange_flowers.jpg" alt="Flowers" style="width:auto;">
</picture>

-- Background Images
background-image -> this will add the image using url function
<p style="background-image:url('url')>text </p1>
If you want the background image to cover the entire element, you can set the background-size property to cover.
Also, to make sure the entire element is always covered, set the background-attachment property to fixed
background-attachment -> A background-image that will not scroll with the page (fixed) (auto|length|cover|contain)
background-repeat -> Will background image repeat or no-repeat
background-image -> this will add the image to background.
background-size -> specify the background image size with auto & in pixels

-- Favicon
A favicon is a small image displayed next to the page title in the browser tab. Add below line after title tag in head
<link rel="icon" type="image/x-icon" href="/images/favicon.ico">

-- Table
Tables allow web developers to arrange data into rows and columns
Each table cell is defined by a <td>(Table Data) and a </td> tag.
Each table row starts with a <tr>(Table Row) and ends with a </tr> tag.
We can add headings in table as well using <th>(table heading) tag.
For table caption, we can use <caption> tag immediately after <table> tag
<thead> -> Groups the header content in a table
<tbody> -> Groups the body content in a table. <tbody> must contain 1 or more <tr> tags. Browsers can use these elements to enable scrolling of the table body independently of the header and footer. Also, when printing a large table that spans multiple pages, these elements can enable the table header and footer to be printed at the top and bottom of each page.
<tfoot> -> Groups the footer content in a table
We can add table border as well using 
table, th, td {
  border: 1px solid black;
}

-- Classes
Class attribute is used to specify a class for an HTML element. Multiple HTML elements can share the same class.
It can also be used by a JavaScript to access and manipulate elements with the specific class name.( document.getElementByClassName)
<div class="test-class"></div>
In CSS, we can access class by using .(dot) eg .test-class{}

-- Id
Id attribute is used to specify a unique id for an HTML element. You cannot have more than 1 element with same id in an HTML document.
It is also used by JavaScript to access and manipulate the element with the specific id.(document.getElementById)
<div id="test-id"></div>
In CSS, we can access id by using #(hash) eg #test-id{}


-- Iframes
iframe is used to display a web page within a web page. An inline frame is used to embed another document within current HTML document.
<iframe src="demo_iframe.htm" height="200" width="300" title="Iframe Example"></iframe>
Title is optional, but helps screen reader to read out content of iframe.

-- JS
JavaScript makes HTML pages more dynamic and interactive.
<script src="jsFile.js">we can write JS here or src attribute allows us to execute external JS</script>


-- Computer Code Elements
kbd -> <kbd> element is used to define keyboard input. The content inside is displayed in the browser's default monospace font.
samp -> <samp> element is used to define sample output from a computer program. Displayed in the browser's default monospace font
code -> <code> element is used to define a piece of computer code.
var -> <var> element  is used to define a variable in programming or in a mathematical expression. The content inside is typically displayed in italic.


-- Entities
Some characters are reserved in HTML. If you use the less than (<) or greater than (>) signs in your text, the browser might mix them with tags.
Character entities are used to display reserved characters in HTML.
&entity_name; -> An entity name is easy to remember.
OR
&#entity_number; -> Browsers may not support all entity names, but the support for entity numbers is good
To show emoji, use &#Number will display character that is not on your keyboard (&#128516 emoji)


-- Forms
An HTML form is used to collect user input. The user input is most often sent to a server for processing.
<form> element is a container for different types of input elements, eg text fields, checkboxes, radio buttons, submit buttons, etc
If the name attribute is omitted, the value of the input field will not be sent at all.
The action attribute defines the action to be performed when the form is submitted.
Usually, the form data is sent to a file on the server when the user clicks on the submit button.
An HTML form is used to collect user input. The user input is most often sent to a server for processing.
<form> element is a container for different types of input elements, eg text fields, checkboxes, radio buttons, submit buttons, etc 
If the name attribute is omitted, the value of the input field will not be sent at all. 
The method attribute specifies the HTTP method to be used when submitting the form data. 
The length of a URL is limited (2048 characters) for Get method 
POST has no size limitations, and can be used to send large amounts of data. 
The autocomplete attribute specifies whether a form should have autocomplete on or off.
autocomplete -> When autocomplete is on, the browser automatically complete values based on values that the user has entered before.
novalidate -> attribute indicates that the form input is not to be validated on submit 
selected -> To define a pre-selected option, add the selected attribute to the option
size -> Use the size attribute to specify the number of visible values
multiple ->Use the multiple attribute to allow the user to select more than one value 
button -> <button> element defines a clickable button
fieldset -> <fieldset> element is used to group related data in a form. It draws the rectangle around the fields inside fieldset
legend -> <legend> element defines a caption for the <fieldset> element. 
datalist -> <datalist> element specifies a list of pre-defined options for an <input> element
The list attribute of the <input> element, must refer to the id attribute of the <datalist> element.
output -> The <output> element represents the result of a calculation 
oninput -> The oninput attribute fires when the value of an <input> or <textarea> element is changed. 
Tip: This event is similar to the onchange event. The difference is that the oninput event occurs immediately 
after the value of an element has changed, while onchange occurs when the element loses focus.
color -> input type color shows color box
date -> input type date shows calender
image -> input type image, an image will be displayed instead of submit button
file -> input type file, allows user to select file.
hidden -> input type hidden, this field is not visible to user
time -> input type time, timer picker pops up display hour min and am/pm
autofocus -> input attribute specifies that the input field should automatically get focus when the page loads.
formenctype -> The input formenctype attribute specifies how the form-data should be encoded when submitted (only for forms with method="post")
formnovalidate -> The input attribute, applied to input to bypass validation.